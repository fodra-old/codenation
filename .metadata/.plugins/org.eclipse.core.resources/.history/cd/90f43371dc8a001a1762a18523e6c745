package br.com.cripto.jobs;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.stereotype.Component;
import org.springframework.util.MultiValueMap;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import br.com.cripto.clients.CondenationClient;
import br.com.cripto.dto.AnswerDto;
import br.com.cripto.utils.CodenationCripto;

@Component
public class CodenationRequest {

	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private ObjectMapper mapper;
	
//	private CodenationClient client;

	public void getAnswer() {

		try (FileOutputStream fileOutputStream = 
				new FileOutputStream("answer.json")) {
			
			AnswerDto answer = restTemplate.getForObject(
					"https://api.codenation.dev/v1/challenge/dev-ps/generate-data?token=c16f69cede9fd74764d37f6c74a8e34a7d0c59f6", AnswerDto.class);
			
			mapper.writeValue(fileOutputStream, answer);
		} catch (JsonGenerationException e) {
			
			e.printStackTrace();
		} catch (JsonMappingException e) {
			
			e.printStackTrace();
		} catch (IOException e) {
			
			e.printStackTrace();
		}
	}

	public void postAnswer() {

		try(FileInputStream fileInputStream =
				new FileInputStream("answer.json")) {
			
			AnswerDto answer = mapper.readValue(fileInputStream, AnswerDto.class);
			answer.setDecifrado(
					CodenationCripto.decriptar(
							(Integer.valueOf(answer.getNumero_casas())*-1), 
							answer.getCifrado()));
			answer.setResumo_criptografico(
					CodenationCripto.convertToSha1(answer.getDecifrado()));
			
			CondenationClient.
			
			//multipart/form-data
			HttpEntity<MultiValueMap<String, Object>> request =
					new HttpEntity<MultiValueMap<String,Object>>(headers)
			
			
//			restTemplate.postForEntity(url, answer);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
}