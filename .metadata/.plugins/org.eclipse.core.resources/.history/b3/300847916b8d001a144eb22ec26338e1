package br.com.cripto.clients;

import java.io.File;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.entity.mime.content.FileBody;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.ObjectMapper;

import br.com.cripto.config.BeanBuild;
import br.com.cripto.dto.AnswerDto;
import br.com.cripto.utils.CodenationCripto;
import io.micrometer.core.instrument.util.IOUtils;

@Component
public class CodenationClient {

	private ObjectMapper mapper = new ObjectMapper();

	public void post() {

		
		
		try (CloseableHttpClient client = HttpClientBuilder.create().build()){
			
			AnswerDto answer = mapper.readValue(fileInputStream, AnswerDto.class);
			answer.setDecifrado(
					CodenationCripto.decriptar(
							(Integer.valueOf(answer.getNumero_casas())*-1), 
							answer.getCifrado()));
			answer.setResumo_criptografico(
					CodenationCripto.convertToSha1(answer.getDecifrado()));
			
			String url = "https://api.codenation.dev/v1/challenge/"
					+ "dev-ps/submit-solution?token=" + BeanBuild.TOKEN;

			File file = new File("./answer.json");

			HttpPost post = new HttpPost(url);
			
			StringBody body = new StringBody(mapper.writeValueAsString(answer), ContentType.MULTIPART_FORM_DATA);
			FileBody fileBody = new FileBody(file, ContentType.DEFAULT_BINARY);
			
			MultipartEntityBuilder builder = MultipartEntityBuilder.create();
			builder.addPart("answer", body);
			builder.addPart("file", fileBody);
			
			HttpEntity entity = builder.build();
			post.setEntity(entity);
			
			HttpResponse response = client.execute(post);
			HttpEntity responseEntity = response.getEntity();
			System.out.println(IOUtils.toString(responseEntity.getContent()));
		} catch (Exception e) {

			e.printStackTrace();
		}
		//		Mediated

		//		LinkedMultiValueMap<String, AnswerDto> map = new LinkedMultiValueMap<>();
		//		String response = null;
		//		HttpStatus status = HttpStatus.CREATED;
		//		
		//		try {
		//			
		//			for (MultipartFile file : )
		//		} catch (Exception e) {
		//			// TODO: handle exception
		//		}
		//		rest.pos
		//		client.h

		//		HttpHeaders headers = new HttpHeaders();
		//		headers.setContentType(MediaType.MULTIPART_FORM_DATA);
		//		
		//		headers.set("answer", answer);

		//		String url = "https://api.codenation.dev/v1/challenge/"
		//				+ "dev-ps/submit-solution?token=" + BeanBuild.TOKEN;
		//		
		//		HttpEntity<LinkedMultiValueMap<String, AnswerDto>> requestEntity =
		//				new HttpEntity<>();
		//		
		//		rest.postForLocation(url, requestEntity);
	}
}